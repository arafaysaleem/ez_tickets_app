on:
  pull_request:
    branches:
      - master
    types: [ closed ]
    paths-ignore: ['doc/**','**.md','.gitignore','Prototype/**']

    workflow_dispatch:

name: Build Release APK
jobs:
  flutter-setup:
    if: github.event.pull_request.merged == true
    name: Run Codegen and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Java JDK
        uses: actions/setup-java@v2.2.0
        with:
          distribution: 'adopt'
          java-version: '12.x'
      - name: Checkout Flutter Stable Channel
        uses: subosito/flutter-action@v1.5.3
        with:
          channel: 'stable'
      - name: Get Pub Dependencies
        run: flutter pub get
      - name: Run build runner for codegen files
        run: flutter packages pub run build_runner build --delete-conflicting-outputs
      - name: Run Dart Analyzer
        run: flutter analyze .
      - name: Run tests
        run: flutter test

  assemble-release:
    name: Setup signing keys
    runs-on: ubuntu-latest
    env:
      ENCRYPTED_KEYSTORE: ${{ secrets.ENCRYPTED_KEYSTORE }}
      KEYSTORE_FILENAME: ${{ secrets.KEYSTORE_FILENAME }}
      KEYSTORE_PASSPHRASE: ${{ secrets.KEYSTORE_PASSPHRASE }}
      KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
    steps:
      - uses: actions/checkout@v2
      - name: Load and decrypt keystore #destination of both should be the android folder
        run: |
          echo "$ENCRYPTED_KEYSTORE" > "$KEYSTORE_FILENAME.asc"
          gpg -d --passphrase "$KEYSTORE_PASSPHRASE" --batch "$KEYSTORE_FILENAME.asc" > "./android/$KEYSTORE_FILENAME"
      - name: Generate key properties
        run: |
          echo "storeFile=../$KEYSTORE_FILENAME" > ./android/key.properties
          echo "storePassword=$KEYSTORE_PASSPHRASE" >> ./android/key.properties
          echo "keyPassword=$KEYSTORE_PASSPHRASE" >> ./android/key.properties
          echo "keyAlias=$KEY_ALIAS" >> ./android/key.properties
      - name: Upload Keystore Artifact
        uses: actions/upload-artifact@v2.2.3
        with:
          name: keystore-artifact
          path: android/${{ env.KEYSTORE_FILENAME }}
          if-no-files-found: error
          retention-days: 1
      - name: Upload Key Properties Artifact
        uses: actions/upload-artifact@v2.2.3
        with:
          name: key-properties-artifact
          path: android/key.properties
          if-no-files-found: error
          retention-days: 1

  build-release:
    needs: [flutter-setup,assemble-release]
    name: Build Release APKS
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download Keystore Artifact
        uses: actions/download-artifact@v2.0.9
        with:
          name: keystore-artifact #Must be same as upload artifact in previous job
          path: android #Download to android directory
      - name: Download Key Properties Artifact
        uses: actions/download-artifact@v2.0.9
        with:
          name: key-properties-artifact #Must be same as upload artifact in previous job
          path: android #Download to android directory
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - name: Checkout Flutter Stable Channel
        uses: subosito/flutter-action@v1.5.1
        with:
          channel: 'stable'
      - name: Get Pub Dependencies
        run: flutter pub get
      - name: Run build runner for codegen files
        run: flutter packages pub run build_runner build --delete-conflicting-outputs
      - name: Generate Splitted Release APKs
        run: flutter build apk --target-platform android-arm,android-arm64 --split-per-abi --obfuscate --split-debug-info=./ez_tickets_app/debug_trace --dart-define=BASE_URL=${{ secrets.BASE_URL }}
      - name: Remove bundled APK
        run: rm build/app/outputs/flutter-apk/app.apk
      - name: Upload Built APKs Artifact
        uses: actions/upload-artifact@v2.2.3
        with:
          name: built-apks-artifact
          path: 'build/app/outputs/flutter-apk/*.apk'
          if-no-files-found: error
          retention-days: 1

  release-artifacts-upload:
    needs: [build-release]
    name: Upload APKS to release artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Download Built APKs Artifact
        uses: actions/download-artifact@v2.0.9
        with:
          name: built-apks-artifact #Must be same as upload artifact in previous job
          path: build/app/outputs/flutter-apk #download all apks to flutter-apk dir
      - name: Bump version and push tag
        id: generate_tag
        uses: mathieudutour/github-tag-action@v5.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: minor # major, minor, patch, false
          custom_release_rules: "ci:patch:CI/CD,chore:patch:Chore Tasks,hotfix:minor:Bug Fixes,refact:patch:Refactors,docs:patch:Documentation Changes,build:patch:Build System/Dependency Upgrades"
      - name: Upload release apk to artifacts
        uses: ncipollo/release-action@v1.8.6
        with:
          tag: "${{ steps.generate_tag.outputs.new_tag }}"
          artifacts: "build/app/outputs/flutter-apk/*.apk"
          name: "Release ${{ steps.generate_tag.outputs.new_tag }}"
          body: "${{ steps.generate_tag.outputs.changelog }}"
          token: ${{ secrets.GITHUB_TOKEN }}

  google-drive-upload:
    needs: [build-release]
    name: Upload APKS to google drive
    runs-on: ubuntu-latest
    steps:
      - name: Download Built APKs Artifact
        uses: actions/download-artifact@v2.0.9
        with:
          name: built-apks-artifact #Must be same as upload artifact in previous job
          path: build/app/outputs/flutter-apk #download all apks to flutter-apk dir
      - name: Upload apks to google drive
        uses: mkrakowitzer/actions-googledrive@1
        with:
          upload-from: ./build/app/outputs/flutter-apk/
          upload-to: APKS/ez_tickets_app/
          skicka-tokencache-json: ${{ secrets.SKICKA_TOKENCACHE_JSON }}
          google-client-id: ${{ secrets.DRIVE_CLIENT_ID }}
          google-client-secret: ${{ secrets.DRIVE_CLIENT_SECRET }}
          remove-outdated: 'false'

  cleanup_job:
    needs: [ google-drive-upload, release-artifacts-upload ]
    runs-on: ubuntu-latest
    steps:
      - name: Delete All Artifacts
        uses: GeekyEggo/delete-artifact@v1.0.0
        with:
          name: |
            keystore-artifact
            key-properties-artifact
            built-apks-artifact
          failOnError: false
